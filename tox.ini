[tox]
requires =
    tox>=4
env_list = py3,pep8
ignore_basepython_conflict = True

[testenv]
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
    LANGUAGE=C.UTF-8
    LC_ALL=C.UTF-8
    OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
    OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
    OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}
    OS_TEST_TIMEOUT={env:OS_TEST_TIMEOUT:180}
    PYTHONDONTWRITEBYTECODE=1
    PYTHONWARNINGS=default::DeprecationWarning,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:site
passenv =
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY
    OS_DEBUG
usedevelop = True
install_command =
    pip install {opts} {packages}
commands =
    find . -type f -name "*.py[c|o]" -delete
    stestr run {posargs}
    stestr slowest
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
allowlist_externals =
    bash
    find
    rm

[testenv:pep8]
commands =
    flake8 seive_cache

[testenv:venv]
commands = {posargs}

[testenv:cover]
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source seive_cache --parallel-mode
commands =
    coverage erase
    find . -type f -name "*.pyc" -delete
    stestr run --no-subunit-trace {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report --fail-under=70 --skip-covered

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -r seive_cache -x tests -s B101,B104,B110,B310,B311,B506
